<!DOCTYPE html>
<html>
  <head>
    <title>Leb NH Historic Tour</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.0.1/dist/leaflet.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <link
        rel="stylesheet"
        href="http://cdn.leafletjs.com/leaflet-0.7/leaflet.css"
    />
    <style>
        body {
            padding: 0;
            margin: 0;
        }
        html, body, #mapid {
            height: 100%;
            width: 100%
        }
    </style>
  </head>

  <body>
    <div id="mapid"></div>
    <script>

    // initialize map in div id="mapid" element
    var mymap = L.map('mapid');

    // set the center of our map, zoom level
    mymap.setView([43.6410, -72.2693], 15);

    // url template for our map provider
    var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';

    // attribution that appears in right bottom corner of the map
    var osmAttrib='Map Data and Text <a href="http://www.lebanonnhhistory.org/explore-lebanon/walking-tour-of-lebanon/">Lebanon Historical Society</a> | Base Map <a href="http://openstreetmap.org">OpenStreetMap</a> contributers';

    // create a tilelayer object for specific map data provider
    var osm = new L.TileLayer(osmUrl, {minZoom: 12, maxZoom: 19, attribution: osmAttrib});

    // add layer with tiles from specific map data provider
    mymap.addLayer(osm);

    // read in the geoJSON that contains the points and information
    $.getJSON('tour.geojson', function(data){
      L.geoJSON( data, {
        pointToLayer: function(feature, latlng){
          var marker = L.marker(latlng);
          marker.bindPopup('<b>' + feature.properties.Name + '</b>' + '<br/>' + feature.properties.description);
          return marker;
        }
      }).addTo(mymap);
    });

    // get the user's location
    mymap.locate({setView: true, maxZoom: 19});

    function onLocationFound(e){
      var radius = e.accuracy / 2;

      L.marker(e.latlng).addTo(mymap)
          .bindPopup("You are within " + radius + " meters from this point").openPopup();

      L.circle(e.latlng, radius).addTo(mymap);
    }

    mymap.on('locatonfound', onLocationFound);

    </script>
  </body>
</html>
